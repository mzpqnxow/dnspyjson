[MASTER]
extension-pkg-whitelist = 
ignore = packages, venv, etc, .git, build
# Ignore versioneer
ignore-patterns = _version.py, versioneer.py

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
# init-hook = 
jobs = 1
# Control the amount of potential inferred values when inferring a single
# object. This can help the performance when dealing with large functions or
# complex, nested conditions.
limit-inference-results = 100
load-plugins = 
persistent = yes
# When enabled, pylint would attempt to guess common misconfiguration and emit
# user-friendly hints instead of false-positive error messages.
suggestion-mode = yes
unsafe-load-any-extension = no

[MESSAGES CONTROL]
# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.
confidence = 
# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once). You can also use "--disable = all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable = all
# --enable = similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable = all --enable = classes
# --disable = W".
disable = print-statement,
    parameter-unpacking,
    unpacking-in-except,
    old-raise-syntax,
    backtick,
    long-suffix,
    old-ne-operator,
    old-octal-literal,
    import-star-module-level,
    non-ascii-bytes-literal,
    raw-checker-failed,
    bad-inline-option,
    locally-disabled,
    file-ignored,
    suppressed-message,
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead,
    apply-builtin,
    basestring-builtin,
    buffer-builtin,
    cmp-builtin,
    coerce-builtin,
    execfile-builtin,
    file-builtin,
    long-builtin,
    raw_input-builtin,
    reduce-builtin,
    standarderror-builtin,
    unicode-builtin,
    xrange-builtin,
    coerce-method,
    delslice-method,
    getslice-method,
    setslice-method,
    no-absolute-import,
    old-division,
    dict-iter-method,
    dict-view-method,
    next-method-called,
    metaclass-assignment,
    indexing-exception,
    raising-string,
    reload-builtin,
    oct-method,
    hex-method,
    nonzero-method,
    cmp-method,
    input-builtin,
    round-builtin,
    intern-builtin,
    unichr-builtin,
    map-builtin-not-iterating,
    zip-builtin-not-iterating,
    range-builtin-not-iterating,
    filter-builtin-not-iterating,
    using-cmp-argument,
    eq-without-hash,
    div-method,
    idiv-method,
    rdiv-method,
    exception-message-attribute,
    invalid-str-codec,
    sys-max-int,
    bad-python3-import,
    deprecated-string-function,
    deprecated-str-translate-call,
    deprecated-itertools-function,
    deprecated-types-field,
    next-method-defined,
    dict-items-not-iterating,
    dict-keys-not-iterating,
    dict-values-not-iterating,
    deprecated-operator-function,
    deprecated-urllib-function,
    xreadlines-attribute,
    deprecated-sys-function,
    exception-escape,
    comprehension-escape

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once). See also the "--disable" option for examples.
enable = c-extension-no-member


[REPORTS]
# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation = 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details.
# msg-template = 
output-format = text
# Tells whether to display a full report or only the messages.
reports = no
# Activate the evaluation score.
score = yes

[REFACTORING]
# Maximum number of nested blocks for function / method body
max-nested-blocks = 7
never-returning-functions = sys.exit

[BASIC]
argument-naming-style = snake_case
attr-naming-style = snake_case
bad-names = 
class-attribute-naming-style = any
# This is CamelCase style
class-naming-style = PascalCase
const-naming-style = UPPER_CASE
docstring-min-length = 3
function-naming-style = snake_case

# Good variable names which should always be accepted, separated by a comma.
good-names = i,j,k,ex,Run,_,p,df,pd,np
# Include a hint for the correct naming format with invalid-name.
include-naming-hint = yes
inlinevar-naming-style = any
method-naming-style = snake_case
module-naming-style = snake_case
name-group = 
no-docstring-rgx = ^_
# List of decorators that produce properties, such as abc.abstractproperty. Add
# to this list to register other decorators that produce valid properties.
# These decorators are taken in consideration only for invalid-name.
property-classes = abc.abstractproperty
variable-naming-style = snake_case
[SIMILARITIES]
# Ignore comments when computing similarities.
ignore-comments = yes
# Ignore docstrings when computing similarities.
ignore-docstrings = yes
# Ignore imports when computing similarities.
ignore-imports = no
# Minimum lines number of a similarity.
min-similarity-lines = 4

[TYPECHECK]
# List of decorators that produce context managers, such as
# contextlib.contextmanager
contextmanager-decorators = contextlib.contextmanager
# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members = 
# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members = yes
# Tells whether to warn about missing members when the owner of the attribute
# is inferred to be None.
ignore-none = yes
# This flag controls whether pylint should warn about no-member and similar
# checks whenever an opaque object is returned when inferring. The inference
# can return multiple potential results while evaluating a Python object, but
# some branches might not be evaluated, which results in partial inference. In
# that case, it might be useful to still emit no-member and other checks for
# the rest of the inferred objects.
ignore-on-opaque-inference = yes
# List of class names for which member attributes should not be checked (useful
# for classes with dynamically set attributes). This supports the use of
# qualified names.
ignored-classes = optparse.Values,thread._local,_thread._local
# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules = 
# Show a hint with possible names when a member name was not found. The aspect
# of finding the hint is based on edit distance.
missing-member-hint = yes
# The minimum edit distance a name should have in order to be considered a
# similar match for a missing member name.
missing-member-hint-distance = 1
# The total number of similar names that should be taken in consideration when
# showing a hint for a missing member.
missing-member-max-choices = 1

[SPELLING]
# Limits count of emitted suggestions for spelling mistakes.
# max-spelling-suggestions =
spelling-dict = 
spelling-ignore-words = 
# A path to a file that contains private dictionary; one word per line.
spelling-private-dict-file = 
# Tells whether to store unknown words to indicated private dictionary in
# --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words = no

[FORMAT]
# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format = 

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines = ^\s*(# )?<?https?://\S+>?$
# Number of spaces of indent required inside a hanging or continued line.
indent-after-paren = 4
indent-string = '    '
max-line-length = 140
max-module-lines = 1400
# List of optional constructs for which whitespace checking is disabled. `dict-
# separator` is used to allow tabulation in dicts, etc.: {1 : 1,\n222: 2}.
# `trailing-comma` allows a space between comma and closing bracket: (a, ).
# `empty-line` allows space-only lines.
no-space-check = trailing-comma,
        dict-separator
single-line-class-stmt = no
single-line-if-stmt = no

[LOGGING]
# All logging module log methods should use '%' style formatting, please
# see the Python logging documentation for more on why. This is not just
# a matter of style -AG
# Format style used to check logging format string. `old` means using %
# formatting, while `new` is for `{}` formatting.
logging-format-style = old
# Logging modules to check that the string format arguments are in logging
# function parameter format.
logging-modules = logging

[MISCELLANEOUS]
# List of note tags to take in consideration, separated by a comma.
notes = FIXME,XXX,TODO,NOTE,REVIEW,BUG,REFACTOR,DEPRECATED,MORIBUND

[VARIABLES]
# List of additional names supposed to be defined in builtins. Remember that
# you should avoid defining new builtins when possible.
additional-builtins = 
# Tells whether unused global variables should be treated as a violation.
allow-global-unused-variables = yes
# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks = cb_ , _cb, dispatch, _handler, handle_
# A regular expression matching the name of dummy variables (i.e. expected to
# not be used).
dummy-variables-rgx = _+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_
# Argument names that match this expression will be ignored. Default to name
# with leading underscore.
ignored-argument-names = _.*|^ignored_|^unused_
# Tells whether we should check for unused import in __init__ files.
init-import = no
# List of qualified module names which can have objects that can redefine
# builtins.
redefining-builtins-modules = six.moves,past.builtins,future.builtins,builtins,io

[DESIGN]
# Maximum number of arguments for function / method.
max-args = 8
# Maximum number of attributes for a class (see R0902).
max-attributes = 8
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
max-statements = 50
min-public-methods = 2

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods = __init__,
           __new__,
           setUp

exclude-protected = _asdict,
         _fields,
         _replace,
         _source,
         _make

valid-classmethod-first-arg = cls
valid-metaclass-classmethod-first-arg = cls

[IMPORTS]
allow-wildcard-with-all = no
analyse-fallback-blocks = no
deprecated-modules = optparse,tkinter.tix
# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled).
ext-import-graph = 
# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled).
import-graph = 
# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled).
int-import-graph = 
# Force import order to recognize a module as part of the standard
# compatibility libraries.
known-standard-library = 
# Force import order to recognize a module as part of a third party library.
known-third-party = enchant

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught. Defaults to
# "Exception".
overgeneral-exceptions = Exception
